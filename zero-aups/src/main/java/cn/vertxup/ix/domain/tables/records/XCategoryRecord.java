/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ix.domain.tables.records;


import cn.vertxup.ix.domain.tables.XCategory;
import cn.vertxup.ix.domain.tables.interfaces.IXCategory;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XCategoryRecord extends UpdatableRecordImpl<XCategoryRecord> implements Record14<String, String, String, String, String, Integer, Boolean, String, String, String, Boolean, String, String, String>, IXCategory {

    private static final long serialVersionUID = -419252618;

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.KEY</code>. 「key」- 类型主键
     */
    @Override
    public XCategoryRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.KEY</code>. 「key」- 类型主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.NAME</code>. 「name」- 类型名称
     */
    @Override
    public XCategoryRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.NAME</code>. 「name」- 类型名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.CODE</code>. 「code」- 类型编号
     */
    @Override
    public XCategoryRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.CODE</code>. 「code」- 类型编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.ICON</code>. 「icon」- 类型图标
     */
    @Override
    public XCategoryRecord setIcon(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.ICON</code>. 「icon」- 类型图标
     */
    @Override
    public String getIcon() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.TYPE</code>. 「type」- 类型的分类
     */
    @Override
    public XCategoryRecord setType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.TYPE</code>. 「type」- 类型的分类
     */
    @Override
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.SORT</code>. 「sort」- 排序信息
     */
    @Override
    public XCategoryRecord setSort(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.SORT</code>. 「sort」- 排序信息
     */
    @Override
    public Integer getSort() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.LEAF</code>. 「leaf」- 是否叶节点
     */
    @Override
    public XCategoryRecord setLeaf(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.LEAF</code>. 「leaf」- 是否叶节点
     */
    @Override
    public Boolean getLeaf() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.PARENT_ID</code>. 「parentId」- 父类ID
     */
    @Override
    public XCategoryRecord setParentId(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.PARENT_ID</code>. 「parentId」- 父类ID
     */
    @Override
    public String getParentId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.IDENTIFIER</code>. 「identifier」- 当前类型描述的Model的标识
     */
    @Override
    public XCategoryRecord setIdentifier(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.IDENTIFIER</code>. 「identifier」- 当前类型描述的Model的标识
     */
    @Override
    public String getIdentifier() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.COMMENT</code>. 「comment」- 备注信息
     */
    @Override
    public XCategoryRecord setComment(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.COMMENT</code>. 「comment」- 备注信息
     */
    @Override
    public String getComment() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XCategoryRecord setActive(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.METADATA</code>. 「metadata」-扩展配置信息
     */
    @Override
    public XCategoryRecord setMetadata(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.METADATA</code>. 「metadata」-扩展配置信息
     */
    @Override
    public String getMetadata() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XCategoryRecord setLanguage(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_CATEGORY.APP_ID</code>. 「appId」- 关联的应用程序ID
     */
    @Override
    public XCategoryRecord setAppId(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_CATEGORY.APP_ID</code>. 「appId」- 关联的应用程序ID
     */
    @Override
    public String getAppId() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<String, String, String, String, String, Integer, Boolean, String, String, String, Boolean, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<String, String, String, String, String, Integer, Boolean, String, String, String, Boolean, String, String, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return XCategory.X_CATEGORY.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return XCategory.X_CATEGORY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return XCategory.X_CATEGORY.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return XCategory.X_CATEGORY.ICON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return XCategory.X_CATEGORY.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return XCategory.X_CATEGORY.SORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return XCategory.X_CATEGORY.LEAF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return XCategory.X_CATEGORY.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return XCategory.X_CATEGORY.IDENTIFIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return XCategory.X_CATEGORY.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field11() {
        return XCategory.X_CATEGORY.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return XCategory.X_CATEGORY.METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return XCategory.X_CATEGORY.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return XCategory.X_CATEGORY.APP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getIcon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getSort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getLeaf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component11() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getAppId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getIcon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getSort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getLeaf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value11() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getAppId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value3(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value4(String value) {
        setIcon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value5(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value6(Integer value) {
        setSort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value7(Boolean value) {
        setLeaf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value8(String value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value9(String value) {
        setIdentifier(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value10(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value11(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value12(String value) {
        setMetadata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value13(String value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord value14(String value) {
        setAppId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XCategoryRecord values(String value1, String value2, String value3, String value4, String value5, Integer value6, Boolean value7, String value8, String value9, String value10, Boolean value11, String value12, String value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IXCategory from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setIcon(from.getIcon());
        setType(from.getType());
        setSort(from.getSort());
        setLeaf(from.getLeaf());
        setParentId(from.getParentId());
        setIdentifier(from.getIdentifier());
        setComment(from.getComment());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setAppId(from.getAppId());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IXCategory> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XCategoryRecord
     */
    public XCategoryRecord() {
        super(XCategory.X_CATEGORY);
    }

    /**
     * Create a detached, initialised XCategoryRecord
     */
    public XCategoryRecord(String key, String name, String code, String icon, String type, Integer sort, Boolean leaf, String parentId, String identifier, String comment, Boolean active, String metadata, String language, String appId) {
        super(XCategory.X_CATEGORY);

        set(0, key);
        set(1, name);
        set(2, code);
        set(3, icon);
        set(4, type);
        set(5, sort);
        set(6, leaf);
        set(7, parentId);
        set(8, identifier);
        set(9, comment);
        set(10, active);
        set(11, metadata);
        set(12, language);
        set(13, appId);
    }
}
