/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ix.domain.tables.records;


import cn.vertxup.ix.domain.tables.XSource;
import cn.vertxup.ix.domain.tables.interfaces.IXSource;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XSourceRecord extends UpdatableRecordImpl<XSourceRecord> implements Record15<String, String, String, String, Integer, String, String, String, String, String, String, Boolean, String, String, String>, IXSource {

    private static final long serialVersionUID = -316602768;

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.KEY</code>. 「key」- 数据源主键
     */
    @Override
    public XSourceRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.KEY</code>. 「key」- 数据源主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.IP_V4</code>. 「ipV4」- IP v4地址
     */
    @Override
    public XSourceRecord setIpV4(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.IP_V4</code>. 「ipV4」- IP v4地址
     */
    @Override
    public String getIpV4() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.IP_V6</code>. 「ipV6」- IP v6地址
     */
    @Override
    public XSourceRecord setIpV6(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.IP_V6</code>. 「ipV6」- IP v6地址
     */
    @Override
    public String getIpV6() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.HOSTNAME</code>. 「hostname」- 主机地址
     */
    @Override
    public XSourceRecord setHostname(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.HOSTNAME</code>. 「hostname」- 主机地址
     */
    @Override
    public String getHostname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.PORT</code>. 「port」- 端口号
     */
    @Override
    public XSourceRecord setPort(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.PORT</code>. 「port」- 端口号
     */
    @Override
    public Integer getPort() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.CATEGORY</code>. 「category」- 数据库类型
     */
    @Override
    public XSourceRecord setCategory(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.CATEGORY</code>. 「category」- 数据库类型
     */
    @Override
    public String getCategory() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.JDBC_URL</code>. 「jdbcUrl」- JDBC连接字符串
     */
    @Override
    public XSourceRecord setJdbcUrl(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.JDBC_URL</code>. 「jdbcUrl」- JDBC连接字符串
     */
    @Override
    public String getJdbcUrl() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.JDBC_CONFIG</code>. 「jdbcConfig」- 连接字符串中的配置key=value
     */
    @Override
    public XSourceRecord setJdbcConfig(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.JDBC_CONFIG</code>. 「jdbcConfig」- 连接字符串中的配置key=value
     */
    @Override
    public String getJdbcConfig() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.INSTANCE</code>. 「instance」- 实例名称
     */
    @Override
    public XSourceRecord setInstance(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.INSTANCE</code>. 「instance」- 实例名称
     */
    @Override
    public String getInstance() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.USERNAME</code>. 「username」- 账号
     */
    @Override
    public XSourceRecord setUsername(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.USERNAME</code>. 「username」- 账号
     */
    @Override
    public String getUsername() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.PASSWORD</code>. 「password」- 密码
     */
    @Override
    public XSourceRecord setPassword(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.PASSWORD</code>. 「password」- 密码
     */
    @Override
    public String getPassword() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XSourceRecord setActive(Boolean value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.METADATA</code>. 「metadata」- 通过MetadataConnection分析读取的数据
     */
    @Override
    public XSourceRecord setMetadata(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.METADATA</code>. 「metadata」- 通过MetadataConnection分析读取的数据
     */
    @Override
    public String getMetadata() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XSourceRecord setLanguage(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ORIGIN_X.X_SOURCE.APP_ID</code>. 「appId」- 关联的应用程序ID
     */
    @Override
    public XSourceRecord setAppId(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ORIGIN_X.X_SOURCE.APP_ID</code>. 「appId」- 关联的应用程序ID
     */
    @Override
    public String getAppId() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, String, Integer, String, String, String, String, String, String, Boolean, String, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, String, Integer, String, String, String, String, String, String, Boolean, String, String, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return XSource.X_SOURCE.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return XSource.X_SOURCE.IP_V4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return XSource.X_SOURCE.IP_V6;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return XSource.X_SOURCE.HOSTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return XSource.X_SOURCE.PORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return XSource.X_SOURCE.CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return XSource.X_SOURCE.JDBC_URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return XSource.X_SOURCE.JDBC_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return XSource.X_SOURCE.INSTANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return XSource.X_SOURCE.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return XSource.X_SOURCE.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field12() {
        return XSource.X_SOURCE.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return XSource.X_SOURCE.METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return XSource.X_SOURCE.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return XSource.X_SOURCE.APP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getIpV4();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getIpV6();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getHostname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getJdbcUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getJdbcConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getInstance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component12() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getAppId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIpV4();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getIpV6();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getHostname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getJdbcUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getJdbcConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getInstance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value12() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getAppId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value2(String value) {
        setIpV4(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value3(String value) {
        setIpV6(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value4(String value) {
        setHostname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value5(Integer value) {
        setPort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value6(String value) {
        setCategory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value7(String value) {
        setJdbcUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value8(String value) {
        setJdbcConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value9(String value) {
        setInstance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value10(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value11(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value12(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value13(String value) {
        setMetadata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value14(String value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord value15(String value) {
        setAppId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XSourceRecord values(String value1, String value2, String value3, String value4, Integer value5, String value6, String value7, String value8, String value9, String value10, String value11, Boolean value12, String value13, String value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IXSource from) {
        setKey(from.getKey());
        setIpV4(from.getIpV4());
        setIpV6(from.getIpV6());
        setHostname(from.getHostname());
        setPort(from.getPort());
        setCategory(from.getCategory());
        setJdbcUrl(from.getJdbcUrl());
        setJdbcConfig(from.getJdbcConfig());
        setInstance(from.getInstance());
        setUsername(from.getUsername());
        setPassword(from.getPassword());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setAppId(from.getAppId());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IXSource> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XSourceRecord
     */
    public XSourceRecord() {
        super(XSource.X_SOURCE);
    }

    /**
     * Create a detached, initialised XSourceRecord
     */
    public XSourceRecord(String key, String ipV4, String ipV6, String hostname, Integer port, String category, String jdbcUrl, String jdbcConfig, String instance, String username, String password, Boolean active, String metadata, String language, String appId) {
        super(XSource.X_SOURCE);

        set(0, key);
        set(1, ipV4);
        set(2, ipV6);
        set(3, hostname);
        set(4, port);
        set(5, category);
        set(6, jdbcUrl);
        set(7, jdbcConfig);
        set(8, instance);
        set(9, username);
        set(10, password);
        set(11, active);
        set(12, metadata);
        set(13, language);
        set(14, appId);
    }
}
