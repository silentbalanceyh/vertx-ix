/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ix.domain.tables.daos;


import cn.vertxup.ix.domain.tables.SRelRolePerm;
import cn.vertxup.ix.domain.tables.records.SRelRolePermRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SRelRolePermDao extends DAOImpl<SRelRolePermRecord, cn.vertxup.ix.domain.tables.pojos.SRelRolePerm, Record2<String, String>> implements VertxDAO<cn.vertxup.ix.domain.tables.records.SRelRolePermRecord,cn.vertxup.ix.domain.tables.pojos.SRelRolePerm,org.jooq.Record2<java.lang.String, java.lang.String>> {

    /**
     * Create a new SRelRolePermDao without any configuration
     */
    public SRelRolePermDao() {
        super(SRelRolePerm.S_REL_ROLE_PERM, cn.vertxup.ix.domain.tables.pojos.SRelRolePerm.class);
    }

    /**
     * Create a new SRelRolePermDao with an attached configuration
     */
    public SRelRolePermDao(Configuration configuration) {
        super(SRelRolePerm.S_REL_ROLE_PERM, cn.vertxup.ix.domain.tables.pojos.SRelRolePerm.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(cn.vertxup.ix.domain.tables.pojos.SRelRolePerm object) {
        return compositeKeyRecord(object.getPermId(), object.getRoleId());
    }

    /**
     * Fetch records that have <code>PERM_ID IN (values)</code>
     */
    public List<cn.vertxup.ix.domain.tables.pojos.SRelRolePerm> fetchByPermId(String... values) {
        return fetch(SRelRolePerm.S_REL_ROLE_PERM.PERM_ID, values);
    }

    /**
     * Fetch records that have <code>ROLE_ID IN (values)</code>
     */
    public List<cn.vertxup.ix.domain.tables.pojos.SRelRolePerm> fetchByRoleId(String... values) {
        return fetch(SRelRolePerm.S_REL_ROLE_PERM.ROLE_ID, values);
    }

    /**
     * Fetch records that have <code>PERM_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ix.domain.tables.pojos.SRelRolePerm>> fetchByPermIdAsync(List<String> values) {
        return fetchAsync(SRelRolePerm.S_REL_ROLE_PERM.PERM_ID,values);
    }

    /**
     * Fetch records that have <code>ROLE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ix.domain.tables.pojos.SRelRolePerm>> fetchByRoleIdAsync(List<String> values) {
        return fetchAsync(SRelRolePerm.S_REL_ROLE_PERM.ROLE_ID,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
