/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ix.domain.tables;


import cn.vertxup.ix.domain.DbOriginX;
import cn.vertxup.ix.domain.Indexes;
import cn.vertxup.ix.domain.Keys;
import cn.vertxup.ix.domain.tables.records.SRelResourceMatrixRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SRelResourceMatrix extends TableImpl<SRelResourceMatrixRecord> {

    private static final long serialVersionUID = 1782849320;

    /**
     * The reference instance of <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX</code>
     */
    public static final SRelResourceMatrix S_REL_RESOURCE_MATRIX = new SRelResourceMatrix();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SRelResourceMatrixRecord> getRecordType() {
        return SRelResourceMatrixRecord.class;
    }

    /**
     * The column <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX.KEY</code>. 「key」- 限定记录ID
     */
    public final TableField<SRelResourceMatrixRecord, String> KEY = createField("KEY", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "「key」- 限定记录ID");

    /**
     * The column <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX.ROLE_ID</code>. 「roleId」- 限定角色ID
     */
    public final TableField<SRelResourceMatrixRecord, String> ROLE_ID = createField("ROLE_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「roleId」- 限定角色ID");

    /**
     * The column <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX.USER_ID</code>. 「userId」- 限定用户ID
     */
    public final TableField<SRelResourceMatrixRecord, String> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「userId」- 限定用户ID");

    /**
     * The column <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX.EXPIRED</code>. 「expired」- 资源过期时间（动态授权）
     */
    public final TableField<SRelResourceMatrixRecord, LocalDateTime> EXPIRED = createField("EXPIRED", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "「expired」- 资源过期时间（动态授权）");

    /**
     * The column <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX.RESOURCE_ID</code>. 「resourceId」- 关联资源ID
     */
    public final TableField<SRelResourceMatrixRecord, String> RESOURCE_ID = createField("RESOURCE_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「resourceId」- 关联资源ID");

    /**
     * The column <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX.APP_KEY</code>. 「appKey」- 所属APP的APPKEY
     */
    public final TableField<SRelResourceMatrixRecord, String> APP_KEY = createField("APP_KEY", org.jooq.impl.SQLDataType.VARCHAR(128), this, "「appKey」- 所属APP的APPKEY");

    /**
     * Create a <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX</code> table reference
     */
    public SRelResourceMatrix() {
        this(DSL.name("S_REL_RESOURCE_MATRIX"), null);
    }

    /**
     * Create an aliased <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX</code> table reference
     */
    public SRelResourceMatrix(String alias) {
        this(DSL.name(alias), S_REL_RESOURCE_MATRIX);
    }

    /**
     * Create an aliased <code>DB_ORIGIN_X.S_REL_RESOURCE_MATRIX</code> table reference
     */
    public SRelResourceMatrix(Name alias) {
        this(alias, S_REL_RESOURCE_MATRIX);
    }

    private SRelResourceMatrix(Name alias, Table<SRelResourceMatrixRecord> aliased) {
        this(alias, aliased, null);
    }

    private SRelResourceMatrix(Name alias, Table<SRelResourceMatrixRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbOriginX.DB_ORIGIN_X;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.S_REL_RESOURCE_MATRIX_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SRelResourceMatrixRecord> getPrimaryKey() {
        return Keys.KEY_S_REL_RESOURCE_MATRIX_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SRelResourceMatrixRecord>> getKeys() {
        return Arrays.<UniqueKey<SRelResourceMatrixRecord>>asList(Keys.KEY_S_REL_RESOURCE_MATRIX_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SRelResourceMatrix as(String alias) {
        return new SRelResourceMatrix(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SRelResourceMatrix as(Name alias) {
        return new SRelResourceMatrix(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SRelResourceMatrix rename(String name) {
        return new SRelResourceMatrix(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SRelResourceMatrix rename(Name name) {
        return new SRelResourceMatrix(name, null);
    }
}
