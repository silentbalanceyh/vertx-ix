/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ix.domain.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ISResource extends Serializable {

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.KEY</code>. 「key」- 资源对应的ID
     */
    public ISResource setKey(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.KEY</code>. 「key」- 资源对应的ID
     */
    public String getKey();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.MODEL_ID</code>. 「modelId」- 资源对应的模型identifier
     */
    public ISResource setModelId(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.MODEL_ID</code>. 「modelId」- 资源对应的模型identifier
     */
    public String getModelId();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.MODEL_KEY</code>. 「modelKey」- 资源对应的单条记录ID
     */
    public ISResource setModelKey(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.MODEL_KEY</code>. 「modelKey」- 资源对应的单条记录ID
     */
    public String getModelKey();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.CODE</code>. 「code」- 资源编号
     */
    public ISResource setCode(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.CODE</code>. 「code」- 资源编号
     */
    public String getCode();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.CATEGORY</code>. 「category」- 资源分类
     */
    public ISResource setCategory(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.CATEGORY</code>. 「category」- 资源分类
     */
    public String getCategory();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.PROJECTION</code>. 「projection」- 该资源的列定义
     */
    public ISResource setProjection(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.PROJECTION</code>. 「projection」- 该资源的列定义
     */
    public String getProjection();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.QUERY</code>. 「query」- 该资源的行查询
     */
    public ISResource setQuery(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.QUERY</code>. 「query」- 该资源的行查询
     */
    public String getQuery();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.LEVEL</code>. 「level」- 资源需求级别
     */
    public ISResource setLevel(Integer value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.LEVEL</code>. 「level」- 资源需求级别
     */
    public Integer getLevel();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.EXPIRED</code>. 「expired」- 资源过期时间（动态授权）
     */
    public ISResource setExpired(LocalDateTime value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.EXPIRED</code>. 「expired」- 资源过期时间（动态授权）
     */
    public LocalDateTime getExpired();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.API_KEY</code>. 「apiKey」- 访问该资源的入口API（一对一绑定）
     */
    public ISResource setApiKey(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.API_KEY</code>. 「apiKey」- 访问该资源的入口API（一对一绑定）
     */
    public String getApiKey();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.TYPE</code>. 「type」- 该资源类型：USER / ROLE / UNIFORM
     */
    public ISResource setType(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.TYPE</code>. 「type」- 该资源类型：USER / ROLE / UNIFORM
     */
    public String getType();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.APP_KEY</code>. 「appKey」- 所属APP的APPKEY
     */
    public ISResource setAppKey(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.APP_KEY</code>. 「appKey」- 所属APP的APPKEY
     */
    public String getAppKey();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.LANGUAGE</code>. 「language」- 使用的语言
     */
    public ISResource setLanguage(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.ACTIVE</code>. 「active」- 是否启用
     */
    public ISResource setActive(Boolean value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ORIGIN_X.S_RESOURCE.METADATA</code>. 「metadata」- 附加配置数据
     */
    public ISResource setMetadata(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.S_RESOURCE.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISResource
     */
    public void from(cn.vertxup.ix.domain.tables.interfaces.ISResource from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISResource
     */
    public <E extends cn.vertxup.ix.domain.tables.interfaces.ISResource> E into(E into);

    default ISResource fromJson(io.vertx.core.json.JsonObject json) {
        setKey(json.getString("KEY"));
        setModelId(json.getString("MODEL_ID"));
        setModelKey(json.getString("MODEL_KEY"));
        setCode(json.getString("CODE"));
        setCategory(json.getString("CATEGORY"));
        setProjection(json.getString("PROJECTION"));
        setQuery(json.getString("QUERY"));
        setLevel(json.getInteger("LEVEL"));
        // Omitting unrecognized type java.time.LocalDateTime for column EXPIRED!
        setApiKey(json.getString("API_KEY"));
        setType(json.getString("TYPE"));
        setAppKey(json.getString("APP_KEY"));
        setLanguage(json.getString("LANGUAGE"));
        setActive(json.getBoolean("ACTIVE"));
        setMetadata(json.getString("METADATA"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY",getKey());
        json.put("MODEL_ID",getModelId());
        json.put("MODEL_KEY",getModelKey());
        json.put("CODE",getCode());
        json.put("CATEGORY",getCategory());
        json.put("PROJECTION",getProjection());
        json.put("QUERY",getQuery());
        json.put("LEVEL",getLevel());
        // Omitting unrecognized type java.time.LocalDateTime for column EXPIRED!
        json.put("API_KEY",getApiKey());
        json.put("TYPE",getType());
        json.put("APP_KEY",getAppKey());
        json.put("LANGUAGE",getLanguage());
        json.put("ACTIVE",getActive());
        json.put("METADATA",getMetadata());
        return json;
    }

}
