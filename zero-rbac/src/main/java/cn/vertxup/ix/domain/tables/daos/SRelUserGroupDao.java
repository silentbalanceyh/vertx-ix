/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ix.domain.tables.daos;


import cn.vertxup.ix.domain.tables.SRelUserGroup;
import cn.vertxup.ix.domain.tables.records.SRelUserGroupRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SRelUserGroupDao extends DAOImpl<SRelUserGroupRecord, cn.vertxup.ix.domain.tables.pojos.SRelUserGroup, Record2<String, String>> implements VertxDAO<cn.vertxup.ix.domain.tables.records.SRelUserGroupRecord,cn.vertxup.ix.domain.tables.pojos.SRelUserGroup,org.jooq.Record2<java.lang.String, java.lang.String>> {

    /**
     * Create a new SRelUserGroupDao without any configuration
     */
    public SRelUserGroupDao() {
        super(SRelUserGroup.S_REL_USER_GROUP, cn.vertxup.ix.domain.tables.pojos.SRelUserGroup.class);
    }

    /**
     * Create a new SRelUserGroupDao with an attached configuration
     */
    public SRelUserGroupDao(Configuration configuration) {
        super(SRelUserGroup.S_REL_USER_GROUP, cn.vertxup.ix.domain.tables.pojos.SRelUserGroup.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(cn.vertxup.ix.domain.tables.pojos.SRelUserGroup object) {
        return compositeKeyRecord(object.getGroupId(), object.getRoleId());
    }

    /**
     * Fetch records that have <code>GROUP_ID IN (values)</code>
     */
    public List<cn.vertxup.ix.domain.tables.pojos.SRelUserGroup> fetchByGroupId(String... values) {
        return fetch(SRelUserGroup.S_REL_USER_GROUP.GROUP_ID, values);
    }

    /**
     * Fetch records that have <code>ROLE_ID IN (values)</code>
     */
    public List<cn.vertxup.ix.domain.tables.pojos.SRelUserGroup> fetchByRoleId(String... values) {
        return fetch(SRelUserGroup.S_REL_USER_GROUP.ROLE_ID, values);
    }

    /**
     * Fetch records that have <code>GROUP_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ix.domain.tables.pojos.SRelUserGroup>> fetchByGroupIdAsync(List<String> values) {
        return fetchAsync(SRelUserGroup.S_REL_USER_GROUP.GROUP_ID,values);
    }

    /**
     * Fetch records that have <code>ROLE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ix.domain.tables.pojos.SRelUserGroup>> fetchByRoleIdAsync(List<String> values) {
        return fetchAsync(SRelUserGroup.S_REL_USER_GROUP.ROLE_ID,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
