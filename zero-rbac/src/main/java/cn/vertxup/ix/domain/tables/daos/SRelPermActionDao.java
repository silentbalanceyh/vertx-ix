/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ix.domain.tables.daos;


import cn.vertxup.ix.domain.tables.SRelPermAction;
import cn.vertxup.ix.domain.tables.records.SRelPermActionRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SRelPermActionDao extends DAOImpl<SRelPermActionRecord, cn.vertxup.ix.domain.tables.pojos.SRelPermAction, Record2<String, String>> implements VertxDAO<cn.vertxup.ix.domain.tables.records.SRelPermActionRecord,cn.vertxup.ix.domain.tables.pojos.SRelPermAction,org.jooq.Record2<java.lang.String, java.lang.String>> {

    /**
     * Create a new SRelPermActionDao without any configuration
     */
    public SRelPermActionDao() {
        super(SRelPermAction.S_REL_PERM_ACTION, cn.vertxup.ix.domain.tables.pojos.SRelPermAction.class);
    }

    /**
     * Create a new SRelPermActionDao with an attached configuration
     */
    public SRelPermActionDao(Configuration configuration) {
        super(SRelPermAction.S_REL_PERM_ACTION, cn.vertxup.ix.domain.tables.pojos.SRelPermAction.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(cn.vertxup.ix.domain.tables.pojos.SRelPermAction object) {
        return compositeKeyRecord(object.getPermId(), object.getActionId());
    }

    /**
     * Fetch records that have <code>PERM_ID IN (values)</code>
     */
    public List<cn.vertxup.ix.domain.tables.pojos.SRelPermAction> fetchByPermId(String... values) {
        return fetch(SRelPermAction.S_REL_PERM_ACTION.PERM_ID, values);
    }

    /**
     * Fetch records that have <code>ACTION_ID IN (values)</code>
     */
    public List<cn.vertxup.ix.domain.tables.pojos.SRelPermAction> fetchByActionId(String... values) {
        return fetch(SRelPermAction.S_REL_PERM_ACTION.ACTION_ID, values);
    }

    /**
     * Fetch records that have <code>PERM_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ix.domain.tables.pojos.SRelPermAction>> fetchByPermIdAsync(List<String> values) {
        return fetchAsync(SRelPermAction.S_REL_PERM_ACTION.PERM_ID,values);
    }

    /**
     * Fetch records that have <code>ACTION_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ix.domain.tables.pojos.SRelPermAction>> fetchByActionIdAsync(List<String> values) {
        return fetchAsync(SRelPermAction.S_REL_PERM_ACTION.ACTION_ID,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
